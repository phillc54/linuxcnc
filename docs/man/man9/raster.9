.\" -*- mode: troff; coding: utf-8 -*-
.\"*******************************************************************
.\"
.\" This file was extracted from hal/components/raster.comp using halcompile.g.
.\" Modify the source file.
.\"
.\"*******************************************************************

.TH RASTER "9" "2025-05-27" "LinuxCNC Documentation" "HAL Component"
.SH NAME

raster \- Outputs laser power based upon pre programmed rastering data
.SH SYNOPSIS
.HP
.B loadrt raster [count=\fIN\fB|names=\fIname1\fB[,\fIname2...\fB]]
.SH DESCRIPTION

The raster component converts a single raster program line to laser output.
               The position pin is slaved to the axis that the raster line maps too. 
               The raster program must be programmed for each raster line that is to be executed.
               The port must be programmed prior to a raster line being executed.

               A python component RasterProgrammer (lib/python/RasterProgrammer.py) is provided to ease programming of the raster component.
               configs/sim/axis/laser shows an example of how these pieces could be integrated for a functional laser engraver config.

               A program line format is as follows:
               {program_offset};{bits_per_pixel};{pixels_per_unit};{number_of_ pixels};{pixel_data ....}

               program_offset: a float. It indicates the start position of the raster line relative to the current axis position. 
                  A negative program_offset indicates that the raster sweeps from positive to negative
                  A zero or positive program_offset indicates that the raster sweeps from negative to positive direction

               bits_per_pixel: an integer. It indicates the precision of a pixel value and consequently the number of bytes consumed per pixel value.
                  A bits per pixel of 4 takes 1 character (0-F) and scales out from from 0.0 to 1.0 (0 being 0 and E being 1.0). F corresponds to off or -1.0
                  A bits per pixel of 8 takes 2 characters per pixel, 12 takes 3 characters per pixel etc...

               pixels_per_unit: a float that represents the size of a pixel in machine units. 
                   1 would correspond to 1 pixel per machine unit, 100 would correspond to 100 pixels per machine unit.

               number_of_pixels: an integer that indicates the length of the raster line in pixels.
                          The length of the rasterline in machine units would be number_of_pixels / pixels_per_unit
               
               pixel_data: a series of hexadeicmal digits ([0-9][a-f][A-F]) the represents the pixel data.
                       bits_per_pixel determines the resolution of a pixel and how many hexadecimal digits per pixel.
                       pixel data characters have no delimiter between each pixel.
                       4 bpp is one character per pixel
                       8 bpp is 2 characters per pixel
                       12 bpp is 3
                       etc...

.SH FUNCTIONS
.TP
\fBraster.\fIN\fB\fR (requires a floating-point thread)

.SH PINS
.TP
.B raster.\fIN\fB.position\fR float in \fR
input coordinate for raster
.TP
.B raster.\fIN\fB.reset\fR bit in \fR
resets the component
.TP
.B raster.\fIN\fB.program\fR port in \fR
pixel data used by the raster
.TP
.B raster.\fIN\fB.run\fR bit in \fR
starts the raster
.TP
.B raster.\fIN\fB.enabled\fR bit out \fR(default: \fI0\fR)
When a valid raster program is running.
.TP
.B raster.\fIN\fB.output\fR float out \fR(default: \fI-1\fR)
current output level command
.TP
.B raster.\fIN\fB.fault\fR bit out \fR(default: \fI0\fR)
If error has occurred
.TP
.B raster.\fIN\fB.fault-code\fR s32 out \fR(default: \fI0\fR)
Code of fault
.TP
.B raster.\fIN\fB.state\fR s32 out \fR(default: \fI0\fR)
current state
.TP
.B raster.\fIN\fB.program-position\fR float out \fR(default: \fI0.0\fR)
base position of program at run start
.TP
.B raster.\fIN\fB.program-offset\fR float out \fR(default: \fI0.0\fR)
offset to start of pixel data
.TP
.B raster.\fIN\fB.bpp\fR s32 out \fR(default: \fI0\fR)
bits per pixel.
.TP
.B raster.\fIN\fB.ppu\fR float out \fR(default: \fI0.0\fR)
pixels per unit
.TP
.B raster.\fIN\fB.count\fR s32 out \fR(default: \fI0\fR)
pixel count
.TP
.B raster.\fIN\fB.bitmap-position\fR float out \fR(default: \fI0.0\fR)
calculated position in bitmap
.TP
.B raster.\fIN\fB.current-pixel-value\fR float out \fR(default: \fI-1.0\fR)
current loaded pixel value
.TP
.B raster.\fIN\fB.previous-pixel-value\fR float out \fR(default: \fI-1.0\fR)
previously loaded pixel value
.TP
.B raster.\fIN\fB.current-pixel-index\fR s32 out \fR(default: \fI-1\fR)
currently loaded pixel index
.TP
.B raster.\fIN\fB.fraction\fR float out \fR(default: \fI0.0\fR)
.SH LICENSE

GPL
