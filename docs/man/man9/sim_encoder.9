'\" t
.\"     Title: sim_encoder
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "SIM_ENCODER" "9" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sim_encoder \- simulated quadrature encoder
.SH "SYNOPSIS"
.sp
\fBloadrt sim_encoder [num_chan=\fR\fInum\fR | \fBnames=\fR\fIname1\fR[,\fIname2\fR\&...]]
.SH "DESCRIPTION"
.sp
\fBsim_encoder\fR can generate quadrature signals as if from an encoder\&. It also generates an index pulse once per revolution\&. It is mostly used for testing and simulation, to replace hardware that may not be available\&. It has a limited maximum frequency, as do all software based pulse generators\&.
.sp
\fBsim_encoder\fR supports a maximum of eight channels\&. The number of channels actually loaded is set by the \fBnum_chan=\fR argument when the module is loaded\&. Alternatively, specify \fBnames=\fR and unique names separated by commas\&.
.sp
The \fBnum_chan=\fR and \fBnames=\fR specifiers are mutually exclusive\&. If neither \fBnum_chan=\fR nor \fBnames=\fR are specified, the default value is one\&.
.SH "FUNCTIONS"
.PP
\fBsim\-encoder\&.make\-pulses\fR (no floating\-point)
.RS 4
Generates the actual quadrature and index pulses\&. Must be called as frequently as possible, to maximize the count rate and minimize jitter\&. Operates on all channels at once\&.
.RE
.PP
\fBsim\-encoder\&.update\-speed\fR (uses floating\-point)
.RS 4
Reads the
\fBspeed\fR
command and other parameters and converts the data into a form that can be used by
\fBmake\-pulses\fR\&. Changes take effect only when
\fBupdate\-speed\fR
runs\&. Can (and should) be called less frequently than
\fBmake\-pulses\fR\&. Operates on all channels at once\&.
.RE
.SH "NAMING"
.sp
The names for pins and parameters are prefixed as: \fBsim\-encoder\&.N\&.\fR for N=0,1,\&...,num\-1 when using \fBnum_chan=num\fR \fBnameN\&.\fR for nameN=name1,name2,\&... when using \fBnames=name1,name2,\&...\fR
.sp
The \fBsim\-encoder\&.N\&.\fR format is shown in the following descriptions\&.
.SH "PINS"
.PP
\fBsim\-encoder\&.\fR\fIN\fR\fB\&.phase\-A\fR bit out
.RS 4
One of the quadrature outputs\&.
.RE
.PP
\fBsim\-encoder\&.\fR\fIN\fR\fB\&.phase\-B\fR bit out
.RS 4
The other quadrature output\&.
.RE
.PP
\fBsim\-encoder\&.\fR\fIN\fR\fB\&.phase\-Z\fR bit out
.RS 4
The index pulse\&.
.RE
.PP
\fBsim\-encoder\&.\fR\fIN\fR\fB\&.speed\fR float in
.RS 4
The desired speed of the encoder, in user units per per second\&. This is divided by
\fBscale\fR, and the result is used as the encoder speed in revolutions per second\&.
.RE
.SH "PARAMETERS"
.PP
\fBsim\-encoder\&.\fR\fIN\fR\fB\&.ppr\fR u32 rw
.RS 4
The pulses per revolution of the simulated encoder\&. Note that this is pulses, not counts, per revolution (ppr)\&. Each pulse or cycle from the encoder results in four counts, because every edge is counted\&. Default value is 100 ppr, or 400 counts per revolution\&.
.RE
.PP
\fBsim\-encoder\&.\fR\fIN\fR\fB\&.scale\fR float rw
.RS 4
Scale factor for the
\fBspeed\fR
input\&. The
\fBspeed\fR
value is divided by
\fBscale\fR
to get the actual encoder speed in revolutions per second\&. For example, if
\fBscale\fR
is set to 60, then
\fBspeed\fR
is in revolutions per minute (RPM) instead of revolutions per second\&. The default value is 1\&.00\&.
.RE
