'\" t
.\"     Title: kins
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "KINS" "9" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
kins, genhexkins, genserkins, maxkins, pentakins, pumakins, rotatekins, scarakins, tripodkins \- kinematics definitions for LinuxCNC
.SH "SYNOPSIS"
.sp
\fBloadrt trivkins\fR (use for most cartesian machines)
.sp
\fBloadrt corexykins\fR
.sp
\fBloadrt genhexkins\fR
.sp
\fBloadrt genserkins\fR
.sp
\fBloadrt lineardeltakins\fR (see separate manpage)
.sp
\fBloadrt matrixkins\fR
.sp
\fBloadrt maxkins\fR
.sp
\fBloadrt pentakins\fR
.sp
\fBloadrt pumakins\fR
.sp
\fBloadrt rosekins\fR
.sp
\fBloadrt rotarydeltakins\fR
.sp
\fBloadrt rotatekins\fR
.sp
\fBloadrt scarakins\fR
.sp
\fBloadrt tripodkins\fR
.sp
\fBloadrt xyzab_tdr_kins\fR
.sp
\fBloadrt xyzac\-trt\-kins\fR
.sp
\fBloadrt xyzbc\-trt\-kins\fR
.sp
\fBloadrt 5axiskins\fR
.SH "DESCRIPTION"
.sp
Rather than exporting HAL pins and functions, these components provide the forward and inverse kinematics definitions for LinuxCNC\&.
.SS "trivkins \- generalized trivial kinematics"
.sp
Joint numbers are assigned sequentially according to the axis letters specified with the \fBcoordinates=\fR parameter\&.
.sp
If the coordinates= parameter is omitted, joint numbers are assigned \fBsequentially\fR to every known axis letter ("xyzabcuvw")\&.
.PP
Example: loadrt \fBtrivkins\fR
.RS 4
Assigns all axis letters to joint numbers in sequence: x==joint0, y==joint1, z==joint2 a==joint3, b==joint4, c==joint5 u==joint6, v==joint7, w==joint8
.RE
.PP
Example: loadrt \fBtrivkins coordinates=xyz\fR
.RS 4
Assigns: x==joint0, y==joint1, z==joint2
.RE
.PP
Example: loadrt \fBtrivkins coordinates=xz\fR
.RS 4
Assigns: x==joint0, z==joint1
.RE
.PP
Example: loadrt \fBtrivkins coordinates=xyzy\fR
.RS 4
Assigns: x==joint0, y0==joint1, z==joint2, y1==joint3:
.RE
.sp
The default kinematics type is \fBKINEMATICS_IDENTITY\fR\&. GUIs may provide special features for configurations using this default kinematics type\&. For instance, the AXIS GUI automatically handles joint and world mode operations so that the distinctions between joints and axes are not visible to the operator\&. This is feasible since there is an exact correspondence between a joint number and its matching axis letter\&.
.PP
The kinematics type can be set with the \fBkinstype=\fR parameter
.RS 4
.PP
kinstype=\fB1\fR for KINEMATICS_IDENTITY (default if kinstype= omitted)
.RS 4
.RE
.PP
kinstype=[\fBb\fR|\fBB\fR] for KINEMATICS_BOTH
.RS 4
.RE
.PP
kinstype=[\fBf\fR|\fBF\fR] for KINEMATICS_FORWARD_ONLY
.RS 4
.RE
.PP
kinstype=[\fBi\fR|\fBI\fR] for KINEMATICS_INVERSE_ONLY
.RS 4
.RE
.PP
Example: loadrt \fBtrivkins coordinates=xyz kinstype=b\fR
.RS 4
Use kinstype=\fBB\fR
(KINEMATICS_BOTH) for configurations that need to move joints independently (joint mode) or as coordinated (teleop) movements in world coordinates\&.
.sp
When using the axis gui with KINEMATICS_BOTH, the
\fI\fB$\fR\fR
key is used to toggle between joint and teleop (world) modes\&.
.sp
An axis letter may be used more than once (\fBduplicated\fR) to assign multiple joints to a single axis coordinate letter\&.
.RE
.PP
Example: coordinates=\fBxyyzw\fR kinstype=\fBB\fR
.RS 4
Assigns: x==joint0, y==joint1
\fBAND\fR
joint2, z==joint3, w==joint4
.RE
.RE
.sp
The above example illustrates a gantry configuration that uses \fBduplicated\fR coordinate letters to indicate that two joints (joint1 and joint2) move a single axis (y)\&. Using kinstype=\fBB\fR allows the configuration to be toggled between joint and world modes of operation\&. Homing configuration options are available to synchronize the final homing move for selected joints \(em see the documentation for \fBHoming Configuration\fR\&.
.PP
\fBNOTES\fR for \fBduplicated\fR coordinates
.RS 4
When
\fBduplicated\fR
coordinate letters are used, specifying KINEMATICS_BOTH (kinstype=\fBB\fR) allows a gui to support jogging of each individual joint in
\fBjoint mode\fR\&.
\fBCaution\fR
is required for machines where the movement of a single joint (in a set specified by a
\fBduplicated\fR
coordinate letter) can lead to gantry racking or other unwanted outcomes\&. When the kinstype= parameter is omitted, operation defaults to KINEMATICS_IDENTITY (kinstype=\fB1\fR) and a gui may allow jogging based upon a selected axis coordinate letter (or by a keyboard key) before homing is completed and the machine is still in
\fBjoint mode\fR\&. The joint selected will depend upon the gui implementation but typically only one of the multiple joints in the set will jog\&. Consequently, specifying KINEMATICS_BOTH is recommended as it enables support for unambiguous, independent jogging of each individual joint\&. Machines that implement homing for all joints (including the provisions for synchronizing the final homing move for multiple joints) may be homed at machine startup and automatically switch to
\fBworld\fR
mode where per\-coordinate jogging is available\&.
.RE
.SS "corexykins \- CoreXY Kinematics"
.sp
X = 0\&.5*(JOINT_0 + JOINT_1)
.sp
Y = 0\&.5*(JOINT_0 \- JOINT_1)
.sp
Z = JOINT_2
.sp
[KINS]JOINTS= must specify 3 or more joints (maximum 9)\&. If enabled by the number of [KINS]JOINTS= specified, JOINT_3,4,5,6,7,8 correspond to coordinates A,B,C,U,V,W respectively\&.
.SS "genhexkins \- Hexapod Kinematics"
.sp
Gives six degrees of freedom in position and orientation (XYZABC)\&. The location of base and platform joints is defined by HAL parameters\&. The forward kinematics iteration is controlled by HAL pins\&. (See switchkins documentation for more info)
.PP
\fBgenhexkins\&.base\&.\fR\fIN\fR\fB\&.x\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.base\&.\fR\fIN\fR\fB\&.y\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.base\&.\fR\fIN\fR\fB\&.z\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.platform\&.\fR\fIN\fR\fB\&.x\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.platform\&.\fR\fIN\fR\fB\&.y\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.platform\&.\fR\fIN\fR\fB\&.z\fR
.RS 4
Parameters describing the
\fIN\fRth joint\(cqs coordinates\&.
.RE
.PP
\fBgenhexkins\&.spindle\-offset\fR
.RS 4
Added to all joints Z coordinates to change the machine origin\&. Facilitates adjusting spindle position\&.
.RE
.PP
\fBgenhexkins\&.base\-n\&.\fR\fIN\fR\fB\&.x\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.base\-n\&.\fR\fIN\fR\fB\&.y\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.base\-n\&.\fR\fIN\fR\fB\&.z\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.platform\-n\&.\fR\fIN\fR\fB\&.x\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.platform\-n\&.\fR\fIN\fR\fB\&.y\fR
.RS 4
.RE
.PP
\fBgenhexkins\&.platform\-n\&.\fR\fIN\fR\fB\&.z\fR
.RS 4
Parameters describing unit vectors of
\fIN\fRth joint\(cqs axis\&. Used to calculate strut length correction for cardanic joints and non\-captive actuators\&.
.RE
.PP
\fBgenhexkins\&.screw\-lead\fR
.RS 4
Lead of strut actuator screw, positive for the right\-handed thread\&. Default is 0 (strut length correction disabled)\&.
.RE
.PP
\fBgenhexkins\&.correction\&.\fR\fIN\fR
.RS 4
Current values of strut length correction for non\-captive actuators with cardanic joints\&.
.RE
.PP
\fBgenhexkins\&.convergence\-criterion\fR
.RS 4
Minimum error value that ends iterations with converged solution\&.
.RE
.PP
\fBgenhexkins\&.limit\-iterations\fR
.RS 4
Limit of iterations, if exceeded iterations stop with no convergence\&.
.RE
.PP
\fBgenhexkins\&.max\-error\fR
.RS 4
Maximum error value, if exceeded iterations stop with no convergence\&.
.RE
.PP
\fBgenhexkins\&.last\-iterations\fR
.RS 4
Number of iterations spent for the last forward kinematics solution\&.
.RE
.PP
\fBgenhexkins\&.max\-iterations\fR
.RS 4
Maximum number of iterations spent for a converged solution during current session\&.
.RE
.PP
\fBgenhexkins\&.tool\-offset\fR
.RS 4
TCP offset from platform origin along Z to implement RTCP function\&. To avoid joints jump change tool offset only when the platform is not tilted\&.
.RE
.SS "genserkins \- generalized serial kinematics"
.sp
Kinematics that can model a general serial\-link manipulator with up to 6 angular joints\&. See switchkins documentation for more info\&.
.sp
The kinematics use Denavit\-Hartenberg definition for the joint and links\&. The DH definitions are the ones used by John J Craig in "Introduction to Robotics: Mechanics and Control" The parameters for the manipulator are defined by HAL pins\&. Note that this uses a convention sometimes known as "Modified DH Parameters" and this must be borne in mind when setting up the system\&. https://w\&.wiki/NcY
.PP
\fBgenserkins\&.A\-\fR\fIN\fR
.RS 4
.RE
.PP
\fBgenserkins\&.ALPHA\-\fR\fIN\fR
.RS 4
.RE
.PP
\fBgenserkins\&.D\-\fR\fIN\fR
.RS 4
Parameters describing the
\fIN\fRth
joint\(cqs geometry\&.
.RE
.SS "matrixkins \- Calibrated kinematics for 3\-axis cartesian machines"
.sp
Similar to trivkins, but allows calibrating out small imperfections in axis alignment\&. See matrixkins(9) man page for detailed instructions\&.
.SS "maxkins \- 5\-axis kinematics example"
.sp
Kinematics for Chris Radek\(cqs tabletop 5 axis mill named \fImax\fR with tilting head (B axis) and horizontal rotary mounted to the table (C axis)\&. Provides UVW motion in the rotated coordinate system\&. The source file, maxkins\&.c, may be a useful starting point for other 5\-axis systems\&.
.SS "pentakins \- Pentapod Kinematics"
.sp
Gives five degrees of freedom in position and orientation (XYZAB)\&. The location of base and effector joints is defined by HAL parameters\&. The forward kinematics iteration is controlled by HAL pins\&.
.PP
\fBpentakins\&.base\&.\fR\fIN\fR\fB\&.x\fR
.RS 4
.RE
.PP
\fBpentakins\&.base\&.\fR\fIN\fR\fB\&.y\fR
.RS 4
.RE
.PP
\fBpentakins\&.base\&.\fR\fIN\fR\fB\&.z\fR
.RS 4
.RE
.PP
\fBpentakins\&.effector\&.\fR\fIN\fR\fB\&.r\fR
.RS 4
.RE
.PP
\fBpentakins\&.effector\&.\fR\fIN\fR\fB\&.z\fR
.RS 4
Parameters describing the
\fIN\fRth
effector joint\(cqs radius and axial position\&.
.RE
.PP
\fBpentakins\&.convergence\-criterion\fR
.RS 4
Minimum error value that ends iterations with converged solution\&.
.RE
.PP
\fBpentakins\&.limit\-iterations\fR
.RS 4
Limit of iterations, if exceeded iterations stop with no convergence\&.
.RE
.PP
\fBpentakins\&.max\-error\fR
.RS 4
Maximum error value, if exceeded iterations stop with no convergence\&.
.RE
.PP
\fBpentakins\&.last\-iterations\fR
.RS 4
Number of iterations spent for the last forward kinematics solution\&.
.RE
.PP
\fBpentakins\&.max\-iterations\fR
.RS 4
Maximum number of iterations spent for a converged solution during current session\&.
.RE
.PP
\fBpentakins\&.tool\-offset\fR
.RS 4
TCP offset from effector origin along Z to implement RTCP function\&. To avoid joints jump change tool offset only when the platform is not tilted\&.
.RE
.SS "pumakins \- kinematics for puma typed robots"
.sp
Kinematics for a puma\-style robot with 6 joints:
.PP
\fBpumakins\&.A2\fR
.RS 4
.RE
.PP
\fBpumakins\&.A3\fR
.RS 4
.RE
.PP
\fBpumakins\&.D3\fR
.RS 4
.RE
.PP
\fBpumakins\&.D4\fR
.RS 4
Describe the geometry of the robot
.RE
.SS "rosekins \- kinematics for a rose engine using"
.sp
a transverse, longitudinal, and rotary joint (3 joints)
.SS "rotarydeltakins \- kinematics for a rotary delta machine"
.sp
Rotary delta robot (3 Joints)
.SS "rotatekins \- Rotated Kinematics"
.sp
The X and Y axes are rotated 45 degrees compared to the joints 0 and 1\&.
.SS "scarakins \- kinematics for SCARA\-type robots"
.sp
(See switchkins documentation for more info)
.PP
\fBscarakins\&.D1\fR
.RS 4
Vertical distance from the ground plane to the center of the inner arm\&.
.RE
.PP
\fBscarakins\&.D2\fR
.RS 4
Horizontal distance between joint[0] axis and joint[1] axis, i\&.e\&., the length of the inner arm\&.
.RE
.PP
\fBscarakins\&.D3\fR
.RS 4
Vertical distance from the center of the inner arm to the center of the outer arm\&. May be positive or negative depending on the structure of the robot\&.
.RE
.PP
\fBscarakins\&.D4\fR
.RS 4
Horizontal distance between joint[1] axis and joint[2] axis, i\&.e\&., the length of the outer arm\&.
.RE
.PP
\fBscarakins\&.D5\fR
.RS 4
Vertical distance from the end effector to the tooltip\&. Positive means the tooltip is lower than the end effector, and is the normal case\&.
.RE
.PP
\fBscarakins\&.D6\fR
.RS 4
Horizontal distance from the centerline of the end effector (and the joints 2 and 3 axis) and the tooltip\&. Zero means the tooltip is on the centerline\&. Non\-zero values should be positive, if negative they introduce a 180 degree offset on the value of joint[3]\&.
.RE
.SS "tripodkins \- Tripod Kinematics"
.sp
The joints represent the distance of the controlled point from three predefined locations (the motors), giving three degrees of freedom in position (XYZ)
.PP
\fBtripodkins\&.Bx\fR
.RS 4
.RE
.PP
\fBtripodkins\&.Cx\fR
.RS 4
.RE
.PP
\fBtripodkins\&.Cy\fR
.RS 4
The location of the three motors is (0,0), (Bx,0), and (Cx,Cy)
.RE
.SS "xyzac\-trt\-kins \- 5 Axis mill (Table Rotary/Tilting)"
.sp
Tilting table (A) and horizontal rotary mounted to table (C axis) (5 Joints 0:x,1:y,2:z,3:a,4:c) with provisions to switch between xyzac and trivkins kinematic types\&. The joint mapping can be altered with the coordinates parameter in the same way as supported by trivkins\&. (See switchkins documentation for more info)
.SS "xyzbc\-trt\-kins \- 5 Axis mill (Table Rotary/Tilting)"
.sp
(5 Joints 0:x,1:y,2:z,3:b,4:c) with provisions to switch between xyzbc and trivkins kinematic types\&. The joint mapping can be altered with the coordinates parameter in the same way as supported by trivkins\&. (See switchkins documentation for more info)
.SS "5axiskins \- 5 Axis bridge mill"
.sp
XYZBCW \(em the W coordinate values (typically used for tool motion) are incorporated into XYZ positioning\&. (Only 5 joints are needed by the kinematics module but an additional joint is needed to display W values)\&. (See switchkins documentation for more info)
.sp
By default, 5axiskins uses coordinates XYZBCW assigned consecutively to joints 0\&.\&.5\&. The module coordinates parameter may be used to assign multiple joints to an axis letter and/or to assign joints to additional coordinates A,U,V with a one\-to\-one correspondence to the assigned joints\&. Example: XYZBCWYV (8 joints total numbered 0\&.\&.7) uses two joints for Y (joints 1,6) and adds an additional coordinate V that has a one\-to\-one relation to joint 7\&.
.sp
Note: These kinematics may be used with the vismach 5axisgui providing that the joint\-letter assignments agree with the default ordering expected by it (XYZBCW \-> joints 0\&.\&.5)
.SH "SEE ALSO"
.sp
For additional information, see following subsections of the section \fIAdvanced Topics\fR of the LinuxCNC documentation:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBKinematics\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB5\-Axis Kinematics\fR
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBSwitchable Kinematics\fR
.RE
.sp
The HAL component \fBuserkins\&.comp\fR is a template for making kinematic modules using the halcompile tool\&. The unmodified template supports an identity xyz configuration that uses 3 joints\&. See \fBuserkins\fR(9) for more info\&.
