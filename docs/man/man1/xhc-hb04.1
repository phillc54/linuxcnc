'\" t
.\"     Title: xhc-hb04
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "XHC\-HB04" "1" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
xhc-hb04 \- HAL non\-realtime component for the xhc\-hb04 pendant\&.
.SH "DESCRIPTION"
.sp
The xhc\-hb04 component supports a common USB pendant that provides a number of pushbuttons, a manual pulse generator (mpg or jog wheel), and a selector switch for the wheel\&.
.sp
There are at least two hardware versions \(em one with 16 buttons and a more common one with 18 buttons\&. The information herein is based on the 18 button device with a USB Vendor:Product code of 10CE:EB70\&.
.sp
In addition to buttons, the pendant provides an LCD display for the current stepsize multiplier (from a set of available integer values), position (absolute and relative, labeled MC and WC respectively), feedrate (override percent and value in units per minute), and spindle speed (override percent and value in revolutions per minute (RPM))\&. The display is managed by a rotary switch that selects one of four axes for wheel positioning, feed override, spindle override, or OFF\&.
.sp
The pendant display, its rotary selector switch, and the component pin names use designators x,y,z,a\&. While this arrangement presumes a machine configured as XYZA, the pins can be assigned independently as required in a HAL configuration\&.
.SH "UDEV"
.sp
The xhc\-hb04 executable needs permission for reading the pendant\(cqs USB device\&. Debian package installs (debs) handle this automatically but Run\-In\-Place (RIP) builds may need a udev rules file\&. This file should be created (using sudo and a text editor) as:
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/udev/rules\&.d/99\-xhc\-hb04\&.rules with the single line:

ATTR{idProduct}=="eb70", ATTR{idVendor}=="10ce", MODE="0666", OWNER="root", GROUP="plugdev"
.fi
.if n \{\
.RE
.\}
.SH "STANDALONE USAGE"
.sp
The xhc\-hb04 program can be run from the command line without LinuxCNC to test a pendant in a simulation mode\&. This standalone mode is used to identify the button codes produced for each button press and to verify proper counting of the jog wheel\&. The identified button codes can be used to create a \fBbutton\-cfg\-file\fR\&. When a \fBbutton\-cfg\-file\fR exists, pendant operation can be verified using the \-I option to specify the file\&.
.sp
Usage:
.sp
xhc\-hb04 [\fIoptions\fR]
.SH "OPTIONS"
.PP
\fB\-h\fR
.RS 4
list command line options and exit
.RE
.PP
\fB\-I button\-cfg\-file\fR
.RS 4
see below for file format
.RE
.PP
\fB\-H\fR
.RS 4
run in real\-time HAL mode (simulation mode is default)
.RE
.PP
\fB\-x\fR
.RS 4
wait for pendant detection before creating HAL pins\&.
.RE
.PP
\fB\-s\fR \fIn\fR
.RS 4
\fIn\fR
is one of the following stepsize sequences
.sp
1: 1,10,100,1000 (default) 2: 1,5,10,20 3: 1,10,100 4: 1,5,10,20,50,100 5: 1,10,50,100,1000
.sp
The stepsize selected is always multiplied by 0\&.001\&.
.RE
.SH "BUTTON\-CFG\-FILE FORMAT"
.sp
Standard configuration files are provided in the distribution for known button configurations:
.sp
.if n \{\
.RS 4
.\}
.nf
   /usr/share/linuxcnc/hallib/xhc\-hb04\-layout1\&.cfg
   /usr/share/linuxcnc/hallib/xhc\-hb04\-layout2\&.cfg
or for a RIP build:
   rip_base_dir/lib/hallib/xhc\-hb04\-layout1\&.cfg
   rip_base_dir/lib/hallib/xhc\-hb04\-layout2\&.cfg
.fi
.if n \{\
.RE
.\}
.sp
layout1 describes the 16 button pendant, layout2 describes the more common 18 button pendant\&.
.sp
The button configuration file follows the same format as INI files but should use a file suffix of \&.cfg\&.
.sp
.if n \{\
.RS 4
.\}
.nf
File format:
  [XHC\-HB04]
  BUTTON=X1:button\-thename1
  BUTTON=X2:button\-thename2
  BUTTON=X3:button\-thename3
  etc\&.
.fi
.if n \{\
.RE
.\}
.sp
XN is the code reported for a button press and button\-thenameN is the name to be assigned to the pin created for the button\&.
.SH "HAL USAGE"
.sp
Use the \-H option to specify HAL mode and other options as required:
.sp
loadusr \-W xhc\-hb04 \-H \fI[options]\fR
.sp
Example: loadusr \-W xhc\-hb04\-H \-I \fIpath_to_cfg_file\fR \-s 2
.SH "INPUT PINS (CONTROL)"
.PP
xhc\-hb04\&.stepsize\-up (bit in)
.RS 4
A 1 pulse on this pin changes the stepsize to the next higher stepsize in the stepsize sequence specified in the xhc\-hb04 (loadusr) command\&.
.RE
.PP
xhc\-hb04\&.stepsize\-down (bit in)
.RS 4
A 1 pulse on this pin changes the stepsize to the next lower stepsize in the stepsize sequence specified in the xhc\-hb04 (loadusr) command\&.
.RE
.SH "INPUT PINS (TO THE PENDANT LCD DISPLAY)"
.PP
xhc\-hb04\&.[xyza]\&.pos\-absolute (float in)
.RS 4
Absolute position display\&. The LCD display for pos\-absolute is fixed format with a sign, 4 number digits and 3 fraction digits (+XXXX\&.XXX), require: \-9999\&.999 ⇐ value ⇐ 9999\&.999 (typically connect to:
halui\&.axis\&.N\&.pos\-feedback)\&.
.RE
.PP
xhc\-hb04\&.[xyza]\&.pos\-relative (float in)
.RS 4
Relative position display (typically connect to: halui\&.axis\&.N\&.pos\-relative)\&. The LCD display for pos\-relative is fixed format with a sign, 4 number digits and 3 fraction digits (+XXXX\&.XXX), require: \-9999\&.999 ⇐ value ⇐ 9999\&.999\&.
.RE
.PP
xhc\-hb04\&.feed\-override (float in)
.RS 4
Feed\-override value\&. The float value is converted to a 16 bit integer and multiplied by 100 in order to display as percent, require: 0 ⇐ pinvalue ⇐ 655 (typically connect to:
halui\&.feed\-override\&.value)\&.
.RE
.PP
xhc\-hb04\&.feed\-value (float in)
.RS 4
Current Feed\-value (units/sec)\&. The float value is converted to a 16 bit integer and multiplied by 60 in order to display as units\-per\-minute, require: 0 ⇐ pinvalue ⇐ 1092 (65520 units\-per\-minute) (typically connect to:
motion\&.current\-vel)\&.
.RE
.PP
xhc\-hb04\&.spindle\-override (float in)
.RS 4
Spindle\-override value\&. The float value is converted to a 16 bit integer and multiplied by 100 in order to display as percent, require: 0 ⇐ pinvalue ⇐ 655) (typically connect to:
halui\&.spindle\-override\&.value)\&.
.RE
.PP
xhc\-hb04\&.spindle\-rps (float in)
.RS 4
Spindle speed in RPS (revolutions per second)\&. The float value is converted to a 16 bit integer and multiplied by 60 in order to display as RPMs, require: 0 ⇐ pinvalue ⇐ 1092 (65520 RPM) (typically connect to:
spindle\&.N\&.speed\-out\-rps\-abs)\&.
.RE
.PP
xhc\-hb04\&.inch\-icon (bit in)
.RS 4
Use inch icon (default is mm):
.RE
.SH "OUTPUT PINS (STATUS)"
.PP
xhc\-hb04\&.sleeping (bit out)
.RS 4
True when the driver receives a pendant inactive (sleeping) message\&.
.RE
.PP
xhc\-hb04\&.jog\&.enable\-off (bit out)
.RS 4
True when the pendant rotary selector switch is in the OFF position or when the pendant is sleeping\&.
.RE
.PP
xhc\-hb04\&.enable\-[xyza] (bit out)
.RS 4
True when the pendant rotary selector switch is in the [xyza] position and not sleeping\&.
.RE
.PP
xhc\-hb04\&.enable\-spindle\-override (bit out)
.RS 4
True when the pendant rotary selector switch is in the Spindle position and not sleeping (typically connect to: halui\&.spindle\-override\-count\-enable)\&.
.RE
.PP
xhc\-hb04\&.enable\-feed\-override (bit out)
.RS 4
True when the pendant rotary selector switch is in the feed position and not sleeping (typically connect to: halui\&.feed\-override\-count\-enable)\&.
.RE
.PP
xhc\-hb04\&.connected (bit out)
.RS 4
True when connection to the pendant is established over the USB interface\&.
.RE
.PP
xhc\-hb04\&.require_pendant (bit out)
.RS 4
True if driver started with the \-x option\&.
.RE
.PP
xhc\-hb04\&.stepsize (s32 out)
.RS 4
Current stepsize in the stepsize sequence as controlled by the stepsize\-up and/or stepsize\-down pins\&.
.RE
.SH "OUTPUT PINS (FOR JOGGING USING AXIS\&.N\&.JOG\-COUNTS)"
.PP
xhc\-hb04\&.jog\&.counts (s32 out)
.RS 4
Number of counts of the wheel since start\-up (50 counts per wheel revolution) (typically connect to
axis\&.N\&.jog\-counts
(lowpass filtering may be helpful))\&.
.RE
.PP
xhc\-hb04\&.jog\&.counts\-neg (s32 out)
.RS 4
The value of the
xhc\-hb04\&.jog\&.counts
multiplied by \-1\&.
.RE
.PP
xhc\-hb04\&.jog\&.scale (float out)
.RS 4
Value is the current stepsize multiplied by 0\&.001 (typically connect to
axis\&.N\&.jog\-scale)\&.
.RE
.SH "EXPERIMENTAL: PINS FOR HALUI PLUS/MINUS JOGGING\&."
.sp
These pins provide some support for non\-trivkins, world mode jogging\&.
.PP
xhc\-hb04\&.jog\&.max\-velocity (float in)
.RS 4
Connect to halui\&.max\-velocity\&.value\&.
.RE
.PP
xhc\-hb04\&.jog\&.velocity (float out)
.RS 4
Connect to halui\&.jog\-speed\&.
.RE
.PP
xhc\-hb04\&.jog\&.plus\-[xyza] (bit out)
.RS 4
Connect to halui\&.jog\&.N\&.plus\&.
.RE
.PP
xhc\-hb04\&.jog\&.minus\-[xyza] (bit out)
.RS 4
Connect to halui\&.jog\&.N\&.minus\&.
.RE
.PP
xhc\-hb04\&.jog\&.increment (float out)
.RS 4
Debug pin \(em abs(delta_pos)\&.
.RE
.SH "BUTTON OUTPUT PINS (FOR THE 18 BUTTON, LAYOUT2 PENDANT)"
.sp
The output bit type pins are TRUE when the button is pressed\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ROW 1
    (bit out) xhc\-hb04\&.button\-reset
    (bit out) xhc\-hb04\&.button\-stop

ROW 2
    (bit out) xhc\-hb04\&.button\-goto\-zero
    (bit out) xhc\-hb04\&.button\-rewind
    (bit out) xhc\-hb04\&.button\-start\-pause
    (bit out) xhc\-hb04\&.button\-probe\-z

ROW 3
   (bit out) xhc\-hb04\&.button\-spindle
   (bit out) xhc\-hb04\&.button\-half
   (bit out) xhc\-hb04\&.button\-zero
   (bit out) xhc\-hb04\&.button\-safe\-z

ROW 4
   (bit out) xhc\-hb04\&.button\-home
   (bit out) xhc\-hb04\&.button\-macro\-1
   (bit out) xhc\-hb04\&.button\-macro\-2
   (bit out) xhc\-hb04\&.button\-macro\-3

ROW 5
   (bit out) xhc\-hb04\&.button\-step
   (bit out) xhc\-hb04\&.button\-mode
   (bit out) xhc\-hb04\&.button\-macro\-6
   (bit out) xhc\-hb04\&.button\-macro\-7
.fi
.if n \{\
.RE
.\}
.SH "SYNTHESIZED BUTTON PINS"
.sp
Additional buttons are synthesized for buttons named \fBzero\fR, \fBgoto\-zero\fR, and \fBhalf\fR\&. These synthesized buttons are active when the button is pressed AND the selector\-switch is set to the corresponding axis [xyza]\&.
.sp
.if n \{\
.RS 4
.\}
.nf
   (bit out) xhc\-hb04\&.button\-zero\-[xyza]
   (bit out) xhc\-hb04\&.button\-goto\-zero\-[xyza]
   (bit out) xhc\-hb04\&.button\-half\-[xyza]
.fi
.if n \{\
.RE
.\}
.SH "DEBUGGING"
.sp
For debugging USB activity, use environmental variable LIBUSB_DEBUG:
.PP
export LIBUSB_DEBUG=[2 | 3 | 4]; xhc\-hb04 [options]
.RS 4
2:warning, 3:info, 4:debug
.RE
.SH "SIM CONFIGS"
.sp
The distribution includes several simulation configurations in the directory:
.sp
.if n \{\
.RS 4
.\}
.nf
   /usr/share/doc/linuxcnc/examples/sample\-configs/sim/axis/xhc\-hb04/
or for a RIP build:
   rip_base_dir/configs/sim/axis/xhc\-hb04/
.fi
.if n \{\
.RE
.\}
.sp
These configurations use a distribution\-provided script (xhc\-hb04\&.tcl) to configure the pendant and make necessary HAL connections according to a number of INI file settings\&. The script uses an additional HAL component (xhc_hb04_util) to provide common functionality and includes support for a standard method for the start\-pause button\&.
.sp
The settings available include: 1) specify button\-cfg\-file for standard layout1 or layout2 2) select axes (up to 4 axes from set of x y z a b c u v w) 3) implement per\-axis filtering coefficients 4) implement per\-axis acceleration for mpg jogging 5) implement per\-axis scale settings 6) select normal or velocity based jog modes 7) select stepsize sequence 8) option to initialize pin for inch or mm display icon 9) option to require pendant on startup
.sp
The sim configs illustrate button connections that: 1) connect pendant stepsize\-up button to the step input pin\&. 2) connect buttons to halui\&.* pins 3) connect buttons to motion\&.* pins
.sp
Another script is included to monitor the pendant and report loss of USB connectivity\&. See the README and \&.txt files in the above directory for usage\&.
.SS "Note"
.sp
The sim configs use the AXIS GUI but the scripts are available with any HAL configuration or GUI\&. The same scripts can be used to adapt the xhc\-hb04 to existing configurations provided that the halui, motion, and axis\&.\fIN\fR pins needed are not otherwise claimed\&. Instructions are included in README file in the directory named above\&.
.sp
Use halcmd to display the pins and signals used by the xhc\-hb04\&.tcl script:
.sp
.if n \{\
.RS 4
.\}
.nf
  halcmd show pin xhc\-hb04       (show all xhc\-hb04 pins)
  halcmd show pin pendant_util   (show all pendant_util pins)
  halcmd show sig pendant:       (show all pendant signals)
.fi
.if n \{\
.RE
.\}
.SH "AUTHOR"
.sp
Frederick Rible (frible@teaser\&.fr)
