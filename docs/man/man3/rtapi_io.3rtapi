'\" t
.\"     Title: rtapi_io
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "RTAPI_IO" "3rtapi" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
rtapi_io \- RTAPI wrappers for linux kernel functionality
.SH "SYNTAX"
.sp
.if n \{\
.RS 4
.\}
.nf
#include <rtapi_io\&.h>
unsigned char rtapi_inb(unsigned short int port);
unsigned short rtapi_inw(unsigned short int port);
unsigned int rtapi_inl(unsigned short int port);
unsigned void rtapi_outb(unsigned char value, unsigned short int port);
unsigned void rtapi_outw(unsigned short value, unsigned short int port);
unsigned void rtapi_inl(unsigned int value, unsigned short int port);
int rtapi_ioperm(unsigned long from, unsigned long num, int turn_on);
unsigned void rtapi_outl(unsigned int value, unsigned short int port);
.fi
.if n \{\
.RE
.\}
.SH "DESCRIPTION"
.sp
In kernel space, each rtapi\fI_xxx\fR or RTAPI\fI_XXX\fR identifier is mapped to the underlying kernel functionality, if available\&.
.sp
In userspace, or in kernels where the underlying functionality is not provided by a kernel, generally another implementation\(empossibly with reduced functionality\(emis provided\&. (For example, the userspace implementation for rtapi_device_register and the kernel space implementation of rtapi_ioperm always succeeds)
.SH "REALTIME CONSIDERATIONS"
.sp
Call from init/cleanup code and from realtime tasks\&. These functions will cause illegal instruction exceptions in non\-realtime components, as well as in uspace rtapi_app when it is not setuid root\&.
.SH "RETURN VALUE"
.sp
As in Linux\&.
.SH "SEE ALSO"
.sp
inb(3), inw(3), inl(3), outb(3), outw(3), outl(3), ioperm(3)
.SH "AUTHOR"
.sp
Jeff Epler
