'\" t
.\"     Title: hm2_bspi_set_read_function
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "HM2_BSPI_SET_READ_FU" "3hm2" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
hm2_bspi_set_read_function \- Register a function to handle the tram write phase of a hostmot2 buffered SPI driver\&.
.SH "SYNTAX"
.sp
.if n \{\
.RS 4
.\}
.nf
#include <hostmot2\-serial\&.h>
int hm2_bspi_set_read_function(char *name, void *func, void *subdata)
.fi
.if n \{\
.RE
.\}
.SH "DESCRIPTION"
.sp
\fBhm2_bspi_set_read_function\fR registers a function in an external driver to be called every time that the main Hostmot2 driver calls the generic "process_tram_read" function\&. The names of the available channels are printed with rtapi_print_msg during the driver loading process and take the form:
.sp
hm2_<board name>\&.<board index>\&.bspi\&.<index>
.sp
For example hm2_5i23\&.0\&.bspi\&.0\&.
.sp
"func" should be a pointer to a function in the sub driver which is to be called to process the results of the BSPI TRAM read phase\&. The function must take a single argument, a pointer to an individual instance of the internal driver\&. If defined in comp then the function must \fBnot\fR use the FUNCTION() convenience macro, and the argument to the function in the definition must \fBalways\fR be (struct state *inst)\&.
.sp
"subdata" is a pointer to the driver instance internal data\&. In the case of a driver written in comp this will always be "inst" in the function call and the call should be anywhere in the EXTRA_SETUP code\&.
.SH "REALTIME CONSIDERATIONS"
.sp
Call only from realtime init code, not from other realtime code or non\-realtime components\&.
.SH "RETURN VALUE"
.sp
Returns 0 on success and \-1 on failure\&.
.SH "SEE ALSO"
.sp
hm2_allocate_bspi_tram(3hm2), hm2_bspi_setup_chan(3hm2), hm2_bspi_set_write_function(3hm2), hm2_bspi_write_chan(3hm2), hm2_tram_add_bspi_frame(3hm2), src/hal/drivers mesa_7i65\&.comp in the LinuxCNC source distribution\&.
