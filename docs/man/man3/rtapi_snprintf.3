'\" t
.\"     Title: rtapi_snprintf
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "RTAPI_SNPRINTF" "3" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
rtapi_snprintf, rtapi_vsnprintf \- Perform snprintf\-like string formatting
.SH "SYNTAX"
.sp
.if n \{\
.RS 4
.\}
.nf
int rtapi_snprintf(char* _buf_, unsigned long int _size_, const char* _fmt_, _\&.\&.\&._);
int rtapi_vsnprintf(char* _buf_, unsigned long int _size_, const char* _fmt_, va_list _apf);
.fi
.if n \{\
.RE
.\}
.SH "ARGUMENTS"
.sp
As for \fIsnprintf(3)\fR or \fIvsnprintf(3)\fR\&.
.SH "DESCRIPTION"
.sp
These functions work like the standard C printf functions, except that a reduced set of formatting operations are supported\&.
.sp
In particular: formatting of long long values is not supported\&. Formatting of floating\-point values is done as though with %A even when other formats like %f are specified\&.
.SH "REALTIME CONSIDERATIONS"
.sp
May be called from non\-realtime, init/cleanup, and realtime code\&.
.SH "RETURN VALUE"
.sp
The number of characters written to \fIbuf\fR\&.
.SH "SEE ALSO"
.sp
printf(3)
