'\" t
.\"     Title: intro
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/27/2025
.\"    Manual: LinuxCNC Documentation
.\"    Source: LinuxCNC
.\"  Language: English
.\"
.TH "INTRO" "3rtapi" "05/27/2025" "LinuxCNC" "LinuxCNC Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
rtapi \- Introduction to the RTAPI API
.SH "DESCRIPTION"
.sp
RTAPI is a library providing a uniform API for several real time operating systems\&. As of LinuxCNC 2\&.7, POSIX threads and RTAI are supported\&.
.SH "HEADER FILES"
.SS "rtapi\&.h"
.sp
The file \fBrtapi\&.h\fR defines the RTAPI for both realtime and non\-realtime code\&. This is a change from Rev 2, where the non\-realtime API was defined in ulapi\&.h and used different function names\&. The symbols RTAPI and ULAPI are used to determine which mode is being compiled, RTAPI for realtime and ULAPI for non\-realtime\&.
.SS "rtapi_math\&.h"
.sp
The file rtapi_math\&.h defines floating\-point functions and constants\&. It should be used instead of <math\&.h> in rtapi real\-time components\&.
.SS "rtapi_string\&.h"
.sp
The file rtapi_string\&.h defines string\-related functions\&. It should be used instead of <string\&.h> in rtapi real\-time components\&.
.SS "rtapi_byteorder\&.h"
.sp
This file defines the preprocessor macros RTAPI_BIG_ENDIAN, RTAPI_LITTLE_ENDIAN, and RTAPI_FLOAT_BIG_ENDIAN as true or false depending on the characteristics of the target system\&. It should be used instead of \fB<endian\&.h>\fR (userspace) or \fB<linux/byteorder\&.h>\fR (kernel space)\&.
.SS "rtapi_limits\&.h"
.sp
This file defines the minimum and maximum value of some fundamental integral types, such as INT_MIN and INT_MAX\&. This should be used instead of \fB<limits\&.h>\fR because that header file is not available to kernel modules\&.
.SH "REALTIME CONSIDERATIONS"
.SS "Non\-realtime code"
.sp
Certain functions are not available in non\-realtime code\&. This includes functions that perform direct device access such as \fBrtapi_inb(3)\fR\&.
.SS "Init/cleanup code"
.sp
Certain functions may only be called from realtime init/cleanup code\&. This includes functions that perform memory allocation, such as \fBrtapi_shmem_new(3)\fR\&.
.SS "Realtime code"
.sp
Only a few functions may be called from realtime code\&. This includes functions that perform direct device access such as \fBrtapi_inb(3)\fR\&. It excludes most Linux kernel APIs such as do_gettimeofday(3) and many rtapi APIs such as rtapi_shmem_new(3)\&.
.SS "Simulator"
.sp
For an RTAPI module to be buildable in the "sim" environment (fake realtime system without special privileges), it must not use \fBany\fR linux kernel APIs, and must not use the RTAPI APIs for direct device access such as \fBrtapi_inb(3)\fR\&. This automatically includes any hardware device drivers, and also devices which use Linux kernel APIs to do things like create special devices or entries in the \fB/proc\fR filesystem\&.
.SH "RTAPI STATUS CODES"
.sp
Except as noted in specific manual pages, RTAPI returns negative errno values for errors, and nonnegative values for success\&.
